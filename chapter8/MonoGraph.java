/**
 * @title chapter8 / List 8-3, Practice 8-1, 8-3, 8-2,
 * @class method
 * @author Oshika
 * @date 2020-08-17 / 13:30-14:00
 */

package chapter8;

/*
public class MonoGraph {

  public static void main(String[] args) {
    printGraph(10);

  }//main()

  private static void printGraph(int x) {
    for(int i = 0; i < x; i++) {
        System.out.print("*");
    }//for
    System.out.println();

  }//printGraph()

}//class
*/
/*
//====== Result ======
**********

 */
/*
//====== Practice 8-1 ======
1. 〇 メソッドは名前を持つ
2. × メソッドは必ず return -> voidは持たない
3. × メソッドは1つ以上の引数 -> 持たないものもある
4. × 他のメソッドを呼び出せない -> 呼び出せるよ
5．× 1クラスに1メソッド -> たくさん持てる

//====== Practice 8-3 ========
1. ◎ printGraph -> camelCaseで書くんだ。他は〇でも望ましくない。
3. × 識別子(名前)に「-」は不可
5. × 数字から
7. × publicは予約語
 *
 */
//====== Practice 8-2 ======

public class MonoGraph {

  public static void main(String[] args) {
    for(int i = -10; i <= 10; i++) {
      printGraph(i);
    }

  }//main()

  private static void printGraph(int i) {
    for(int j = 1; j <= i * i; j++) {
        System.out.print("*");
    }//for
    System.out.println();

  }//printGraph()

}//class

/*
//====== Result ======
****************************************************************************************************
*********************************************************************************
****************************************************************
*************************************************
************************************
*************************
****************
*********
****
*

*
****
*********
****************
*************************
************************************
*************************************************
****************************************************************
*********************************************************************************
****************************************************************************************************

*/
